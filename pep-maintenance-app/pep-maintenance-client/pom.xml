<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>pep-maintenance-app</artifactId>
    <groupId>org.springframework.boot</groupId>
    <version>2.0.0.BUILD-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>pep-maintenance-client</artifactId>
  <packaging>pom</packaging>
  <!-- Plugin from
   https://gist.githubusercontent.com/phillipgreenii/7c954e3c3911e5c32bd0/raw/5504dea19ee73109dc1c717ecd426a2fb60996c1/pom.xml -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.3.2</version>
        <executions>
          <!-- Required: The following will ensure `npm install` is called
               before anything else during the 'Default Lifecycle' -->
          <execution>
            <id>npm install (initialize)</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <executable>npm</executable>
              <arguments>
                <argument>install</argument>
              </arguments>
            </configuration>
          </execution>


          <!-- Optional: The following will output the npm configuration.
               I do this so my CI logs will show the npm information used
                   for the build
          <execution>
            <id>npm config list (validate)</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <executable>npm</executable>
              <arguments>
                <argument>config</argument>
                <argument>list</argument>
              </arguments>
            </configuration>
          </execution>-->

          <!-- Required: This following calls `npm run build` where 'build' is
               the script name I used in my project, change this if yours is
                   different -->
          <execution>
            <id>npm run build (compile)</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <executable>npm</executable>
              <arguments>
                <argument>run</argument>
                <argument>build</argument>
              </arguments>
            </configuration>
          </execution>

          <!-- Optional: The following runs the script that copies the
               appropriate files from the npm build directory into the location
                   'maven-war-plugin' is expecting.  The copying could be done
                   during the 'build' script, but I like to keep it separate.
                   Idealy in the future, I won't need maven at which, I can just
                   delete the 'prepare-for-maven-war' script.
          <execution>
            <id>npm run prepare-for-maven (prepare-package)</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <executable>npm</executable>
              <arguments>
                <argument>run</argument>
                <argument>prepare-for-maven-war</argument>
              </arguments>
            </configuration>
          </execution>-->

          <!-- Optional: The following will publish to npm if you run
               `mvn deploy`.
          <execution>
            <id>npm run publish (deploy)</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>deploy</phase>
            <configuration>
              <executable>npm</executable>
              <arguments>
                <argument>publish</argument>
              </arguments>
            </configuration>
          </execution>-->

          <!-- Required: The following will run unit tests.  My test scripts
               in npm look for the property 'skipTests', so I map it to
                   'maven.test.skip'
                   Note: the douple '-' syntax used below only works with npm >= 2. -->
          <!-- <execution>
               <id>npm run test (test)</id>
               <goals>
                   <goal>exec</goal>
               </goals>
               <phase>test</phase>
               <configuration>
                   <executable>npm</executable>
                   <arguments>
                       <argument>run</argument>
                       <argument>test</argument>
                       <argument>-</argument>
                       <argument>-skipTests=${maven.test.skip}</argument>
                   </arguments>
               </configuration>
           </execution>
           -->

          <!-- Required: The following calls the npm script that cleans
               up the build.
          <execution>
            <id>npm run clean (clean)</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>clean</phase>
            <configuration>
              <executable>npm</executable>
              <arguments>
                <argument>run</argument>
                <argument>clean</argument>
              </arguments>
            </configuration>
          </execution>-->
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
